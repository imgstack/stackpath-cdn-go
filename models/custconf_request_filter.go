// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// CustconfRequestFilter custconf request filter
// swagger:model custconfRequestFilter
type CustconfRequestFilter struct {

	// filter name
	FilterName string `json:"filterName,omitempty"`

	// String of values deliminated by a ',' character.
	HeaderFilter string `json:"headerFilter,omitempty"`

	// This is used by the API to perform conflict checking.
	ID string `json:"id,omitempty"`

	// String of values deliminated by a ',' character.
	MethodFilter string `json:"methodFilter,omitempty"`

	// String of values deliminated by a ',' character.
	PopFilter string `json:"popFilter,omitempty"`

	// String of values deliminated by a ',' character.
	RegionFilter string `json:"regionFilter,omitempty"`

	// String of values deliminated by a ',' character.
	URLFilter string `json:"urlFilter,omitempty"`

	// url input
	URLInput RequestFilterURLInputEnumWrapperValue `json:"urlInput,omitempty"`
}

// Validate validates this custconf request filter
func (m *CustconfRequestFilter) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateURLInput(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CustconfRequestFilter) validateURLInput(formats strfmt.Registry) error {

	if swag.IsZero(m.URLInput) { // not required
		return nil
	}

	if err := m.URLInput.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("urlInput")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CustconfRequestFilter) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CustconfRequestFilter) UnmarshalBinary(b []byte) error {
	var res CustconfRequestFilter
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
