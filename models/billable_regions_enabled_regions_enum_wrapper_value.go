// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// BillableRegionsEnabledRegionsEnumWrapperValue billable regions enabled regions enum wrapper value
//
// swagger:model BillableRegionsEnabledRegionsEnumWrapperValue
type BillableRegionsEnabledRegionsEnumWrapperValue string

const (

	// BillableRegionsEnabledRegionsEnumWrapperValueUNKNOWN captures enum value "UNKNOWN"
	BillableRegionsEnabledRegionsEnumWrapperValueUNKNOWN BillableRegionsEnabledRegionsEnumWrapperValue = "UNKNOWN"

	// BillableRegionsEnabledRegionsEnumWrapperValueUs captures enum value "us"
	BillableRegionsEnabledRegionsEnumWrapperValueUs BillableRegionsEnabledRegionsEnumWrapperValue = "us"

	// BillableRegionsEnabledRegionsEnumWrapperValueEu captures enum value "eu"
	BillableRegionsEnabledRegionsEnumWrapperValueEu BillableRegionsEnabledRegionsEnumWrapperValue = "eu"

	// BillableRegionsEnabledRegionsEnumWrapperValueSa captures enum value "sa"
	BillableRegionsEnabledRegionsEnumWrapperValueSa BillableRegionsEnabledRegionsEnumWrapperValue = "sa"

	// BillableRegionsEnabledRegionsEnumWrapperValueAs captures enum value "as"
	BillableRegionsEnabledRegionsEnumWrapperValueAs BillableRegionsEnabledRegionsEnumWrapperValue = "as"

	// BillableRegionsEnabledRegionsEnumWrapperValueOc captures enum value "oc"
	BillableRegionsEnabledRegionsEnumWrapperValueOc BillableRegionsEnabledRegionsEnumWrapperValue = "oc"
)

// for schema
var billableRegionsEnabledRegionsEnumWrapperValueEnum []interface{}

func init() {
	var res []BillableRegionsEnabledRegionsEnumWrapperValue
	if err := json.Unmarshal([]byte(`["UNKNOWN","us","eu","sa","as","oc"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		billableRegionsEnabledRegionsEnumWrapperValueEnum = append(billableRegionsEnabledRegionsEnumWrapperValueEnum, v)
	}
}

func (m BillableRegionsEnabledRegionsEnumWrapperValue) validateBillableRegionsEnabledRegionsEnumWrapperValueEnum(path, location string, value BillableRegionsEnabledRegionsEnumWrapperValue) error {
	if err := validate.EnumCase(path, location, value, billableRegionsEnabledRegionsEnumWrapperValueEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this billable regions enabled regions enum wrapper value
func (m BillableRegionsEnabledRegionsEnumWrapperValue) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateBillableRegionsEnabledRegionsEnumWrapperValueEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this billable regions enabled regions enum wrapper value based on context it is used
func (m BillableRegionsEnabledRegionsEnumWrapperValue) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
