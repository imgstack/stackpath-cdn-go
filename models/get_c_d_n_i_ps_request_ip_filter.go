// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// GetCDNIPsRequestIPFilter The kinds of IP addresses that can be retrieved
//
// - ALL: Retrieve all IP address types
//  - IPV4: Retrieve only IPv4 addresses
//  - IPV6: Retrieve only IPv6 addresses
//
// swagger:model GetCDNIPsRequestIPFilter
type GetCDNIPsRequestIPFilter string

const (

	// GetCDNIPsRequestIPFilterALL captures enum value "ALL"
	GetCDNIPsRequestIPFilterALL GetCDNIPsRequestIPFilter = "ALL"

	// GetCDNIPsRequestIPFilterIPV4 captures enum value "IPV4"
	GetCDNIPsRequestIPFilterIPV4 GetCDNIPsRequestIPFilter = "IPV4"

	// GetCDNIPsRequestIPFilterIPV6 captures enum value "IPV6"
	GetCDNIPsRequestIPFilterIPV6 GetCDNIPsRequestIPFilter = "IPV6"
)

// for schema
var getCDNIPsRequestIpFilterEnum []interface{}

func init() {
	var res []GetCDNIPsRequestIPFilter
	if err := json.Unmarshal([]byte(`["ALL","IPV4","IPV6"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCDNIPsRequestIpFilterEnum = append(getCDNIPsRequestIpFilterEnum, v)
	}
}

func (m GetCDNIPsRequestIPFilter) validateGetCDNIPsRequestIPFilterEnum(path, location string, value GetCDNIPsRequestIPFilter) error {
	if err := validate.EnumCase(path, location, value, getCDNIPsRequestIpFilterEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this get c d n i ps request IP filter
func (m GetCDNIPsRequestIPFilter) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateGetCDNIPsRequestIPFilterEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this get c d n i ps request IP filter based on context it is used
func (m GetCDNIPsRequestIPFilter) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
