// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// CustconfDeviceBasedDynamicContent Extends dynamic content by rewriting the "DEVICE" parameter and header based
// on the User-Agent in the Client Request.
// swagger:model custconfDeviceBasedDynamicContent
type CustconfDeviceBasedDynamicContent struct {

	// enabled
	Enabled bool `json:"enabled"`

	// String of values deliminated by a ',' character.
	HeaderFilter string `json:"headerFilter,omitempty"`

	// This is used by the API to perform conflict checking.
	ID string `json:"id,omitempty"`

	// String of values deliminated by a ',' character.
	MethodFilter string `json:"methodFilter,omitempty"`

	// The regular expression used to determine if a User-Agent is a mobile
	// device.  The CDN considers a positive match using this pattern as being a
	// mobile device.
	MobileDevicePattern string `json:"mobileDevicePattern,omitempty"`

	// Provides the ability to change the name of the parameter/header of
	// interest.
	NameOverride string `json:"nameOverride,omitempty"`

	// A flag that tells the CDN to pass through the DEVICE parameter to the
	// origin.
	PassToOrigin bool `json:"passToOrigin"`

	// String of values deliminated by a ',' character.
	PathFilter string `json:"pathFilter,omitempty"`
}

// Validate validates this custconf device based dynamic content
func (m *CustconfDeviceBasedDynamicContent) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CustconfDeviceBasedDynamicContent) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CustconfDeviceBasedDynamicContent) UnmarshalBinary(b []byte) error {
	var res CustconfDeviceBasedDynamicContent
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
