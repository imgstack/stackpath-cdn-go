// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// GetCDNIPsRequestResponseType The response formats that can be retrieved
//
// - JSON: Return a JSON serialized response
//  - PLAIN_TEXT: Return a plain text response with one IP address on each line
//
// swagger:model GetCDNIPsRequestResponseType
type GetCDNIPsRequestResponseType string

const (

	// GetCDNIPsRequestResponseTypeJSON captures enum value "JSON"
	GetCDNIPsRequestResponseTypeJSON GetCDNIPsRequestResponseType = "JSON"

	// GetCDNIPsRequestResponseTypePLAINTEXT captures enum value "PLAIN_TEXT"
	GetCDNIPsRequestResponseTypePLAINTEXT GetCDNIPsRequestResponseType = "PLAIN_TEXT"
)

// for schema
var getCDNIPsRequestResponseTypeEnum []interface{}

func init() {
	var res []GetCDNIPsRequestResponseType
	if err := json.Unmarshal([]byte(`["JSON","PLAIN_TEXT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCDNIPsRequestResponseTypeEnum = append(getCDNIPsRequestResponseTypeEnum, v)
	}
}

func (m GetCDNIPsRequestResponseType) validateGetCDNIPsRequestResponseTypeEnum(path, location string, value GetCDNIPsRequestResponseType) error {
	if err := validate.EnumCase(path, location, value, getCDNIPsRequestResponseTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this get c d n i ps request response type
func (m GetCDNIPsRequestResponseType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateGetCDNIPsRequestResponseTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this get c d n i ps request response type based on context it is used
func (m GetCDNIPsRequestResponseType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
