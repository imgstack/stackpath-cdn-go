// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// CustconfClientRequestQueue The script engine client request queue provides access to requests received
// by the CDN, giving you the ability to alter the request before the host
// processes it.  Access to the clientâ€™s request also provides you the ability
// to dynamically change your host's configuration policies based on business
// rules that require visibility to the client request.
// swagger:model custconfClientRequestQueue
type CustconfClientRequestQueue struct {

	// enabled
	Enabled bool `json:"enabled,omitempty"`

	// String of values deliminated by a ',' character.
	HeaderFilter string `json:"headerFilter,omitempty"`

	// This is used by the API to perform conflict checking.
	ID string `json:"id,omitempty"`

	// String of values deliminated by a ',' character. This is a comma separated
	// list of IP address and/or CIDR blocks that limit the execution of the
	// script.
	IPList string `json:"ipList,omitempty"`

	// ip list access code
	IPListAccessCode ClientRequestQueueIPListAccessCodeEnumWrapperValue `json:"ipListAccessCode,omitempty"`

	// This is a subdirectory path that must exist in the request path in order to
	// apply the script. For example,  if the value is "foo/bar" (with or without
	// slashes on the ends), and /foo/bar/ exists in the request path, then a
	// dynamic IP-based content protection policy will be applied. Otherwise, the
	// request will be allowed to pass through untouched.
	IPListStageDir string `json:"ipListStageDir,omitempty"`

	// log level
	LogLevel CustconfClientRequestQueueLogLevelEnumWrapperValue `json:"logLevel,omitempty"`

	// String of values deliminated by a ',' character.
	MethodFilter string `json:"methodFilter,omitempty"`

	// String of values deliminated by a ',' character.
	PathFilter string `json:"pathFilter,omitempty"`

	// provide IP geo info
	ProvideIPGeoInfo bool `json:"provideIPGeoInfo,omitempty"`

	// quit on error
	QuitOnError bool `json:"quitOnError,omitempty"`

	// Integer that defines the maximum size in bytes of a Client request's body
	// that can be sent by the CDN Caching Server to the Script Engine when
	// SendRequestBody has been set to true (enabled).
	RequestBodyMaximumSize int64 `json:"requestBodyMaximumSize,omitempty"`

	// This is the path of the script on the CDN caching server.
	ScriptPath string `json:"scriptPath,omitempty"`

	// Boolean flag for indicating whether the CDN Caching Server needs to send
	// the body provided in a Client request to the Script Engine.
	SendRequestBody bool `json:"sendRequestBody,omitempty"`
}

// Validate validates this custconf client request queue
func (m *CustconfClientRequestQueue) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIPListAccessCode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLogLevel(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CustconfClientRequestQueue) validateIPListAccessCode(formats strfmt.Registry) error {

	if swag.IsZero(m.IPListAccessCode) { // not required
		return nil
	}

	if err := m.IPListAccessCode.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("ipListAccessCode")
		}
		return err
	}

	return nil
}

func (m *CustconfClientRequestQueue) validateLogLevel(formats strfmt.Registry) error {

	if swag.IsZero(m.LogLevel) { // not required
		return nil
	}

	if err := m.LogLevel.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("logLevel")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CustconfClientRequestQueue) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CustconfClientRequestQueue) UnmarshalBinary(b []byte) error {
	var res CustconfClientRequestQueue
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
