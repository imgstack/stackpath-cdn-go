// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// CustconfLanguageRedirect The language code origin request rewrite policy allows you to rewrite
// responses from your origin to 301 response codes such that you can re-issue
// the request to your origin with a new request URL.  This policy was created
// to specifically map language codes in a origin request URL to default
// languages when a resource was not found on the origin.  NOTE: This policy
// requires a custom script to be configured on the script engine.
// swagger:model custconfLanguageRedirect
type CustconfLanguageRedirect struct {

	// enabled
	Enabled bool `json:"enabled"`

	// The origin HTTP response code that applies to this policy
	HTTPCode int32 `json:"httpCode,omitempty"`

	// This is used by the API to perform conflict checking.
	ID string `json:"id,omitempty"`

	// String of values deliminated by a ';' character. This is a list of language
	// code mappings that maps one or more requested codes to a code to use in the
	// redirect request. The mapping must be separated by an equals sign. If more
	// than one mapping is provided, the mappings will be applied in the order
	// listed until a match is made. Note that an asterisk is permitted to
	// represent all requested codes.
	Mapping string `json:"mapping,omitempty"`

	// A regular expression that identifies the paths or specific resource that
	// applies to this policy
	PathRegex string `json:"pathRegex,omitempty"`
}

// Validate validates this custconf language redirect
func (m *CustconfLanguageRedirect) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CustconfLanguageRedirect) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CustconfLanguageRedirect) UnmarshalBinary(b []byte) error {
	var res CustconfLanguageRedirect
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
