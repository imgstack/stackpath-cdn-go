// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// GetMetricsRequestSiteTypeFilter The different kind of sites that metrics can be retrieved for
//
// - ALL: Retrieve metrics for all site types
//  - CDN: Retrieve metrics for CDN sites only
//  - WAF: Retrieve metrics for WAF sites only
//  - API: Retrieve metrics for API sites only
//  - EDGE_ENGINE: Retrieve metrics for sites with EdgeEngine scripts only
//
// swagger:model GetMetricsRequestSiteTypeFilter
type GetMetricsRequestSiteTypeFilter string

const (

	// GetMetricsRequestSiteTypeFilterALL captures enum value "ALL"
	GetMetricsRequestSiteTypeFilterALL GetMetricsRequestSiteTypeFilter = "ALL"

	// GetMetricsRequestSiteTypeFilterCDN captures enum value "CDN"
	GetMetricsRequestSiteTypeFilterCDN GetMetricsRequestSiteTypeFilter = "CDN"

	// GetMetricsRequestSiteTypeFilterWAF captures enum value "WAF"
	GetMetricsRequestSiteTypeFilterWAF GetMetricsRequestSiteTypeFilter = "WAF"

	// GetMetricsRequestSiteTypeFilterAPI captures enum value "API"
	GetMetricsRequestSiteTypeFilterAPI GetMetricsRequestSiteTypeFilter = "API"

	// GetMetricsRequestSiteTypeFilterEDGEENGINE captures enum value "EDGE_ENGINE"
	GetMetricsRequestSiteTypeFilterEDGEENGINE GetMetricsRequestSiteTypeFilter = "EDGE_ENGINE"
)

// for schema
var getMetricsRequestSiteTypeFilterEnum []interface{}

func init() {
	var res []GetMetricsRequestSiteTypeFilter
	if err := json.Unmarshal([]byte(`["ALL","CDN","WAF","API","EDGE_ENGINE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getMetricsRequestSiteTypeFilterEnum = append(getMetricsRequestSiteTypeFilterEnum, v)
	}
}

func (m GetMetricsRequestSiteTypeFilter) validateGetMetricsRequestSiteTypeFilterEnum(path, location string, value GetMetricsRequestSiteTypeFilter) error {
	if err := validate.EnumCase(path, location, value, getMetricsRequestSiteTypeFilterEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this get metrics request site type filter
func (m GetMetricsRequestSiteTypeFilter) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateGetMetricsRequestSiteTypeFilterEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this get metrics request site type filter based on context it is used
func (m GetMetricsRequestSiteTypeFilter) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
