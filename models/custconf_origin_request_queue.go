// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// CustconfOriginRequestQueue The script engine origin pull request queue policy allows you to register a
// PHP script to execute on the CDN caching server prior to the server making an
// origin pull request to your origin.  Scripts defined in this queue can
// modify, add, and/or delete HTTP headers on the origin pull request.
// swagger:model custconfOriginRequestQueue
type CustconfOriginRequestQueue struct {

	// enabled
	Enabled bool `json:"enabled,omitempty"`

	// String of values deliminated by a ',' character.
	HeaderFilter string `json:"headerFilter,omitempty"`

	// This is used by the API to perform conflict checking.
	ID string `json:"id,omitempty"`

	// log level
	LogLevel CustconfOriginRequestQueueLogLevelEnumWrapperValue `json:"logLevel,omitempty"`

	// String of values deliminated by a ',' character.
	MethodFilter string `json:"methodFilter,omitempty"`

	// String of values deliminated by a ',' character.
	PathFilter string `json:"pathFilter,omitempty"`

	// This indicates the behavior of the caching server on script errors.  When
	// selected, the caching server issues a 500 HTTP response code to an end user
	// if a request failed to properly execute the script designated by this
	// policy.  If this option is unselected, the caching server ignores the
	// script errors and continues processing the request.
	QuitOnError bool `json:"quitOnError,omitempty"`

	// Integer that defines the maximum size in bytes of a Origin request's body
	// that can be sent by the CDN Caching Server to the Script Engine when
	// SendRequestBody has been set to true (enabled).
	RequestBodyMaximumSize int64 `json:"requestBodyMaximumSize,omitempty"`

	// This is the path of the script on the CDN caching server.
	ScriptPath string `json:"scriptPath,omitempty"`

	// Boolean flag for indicating whether the CDN Caching Server needs to send
	// the body of the Origin request to the Script Engine.
	SendRequestBody bool `json:"sendRequestBody,omitempty"`
}

// Validate validates this custconf origin request queue
func (m *CustconfOriginRequestQueue) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLogLevel(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CustconfOriginRequestQueue) validateLogLevel(formats strfmt.Registry) error {

	if swag.IsZero(m.LogLevel) { // not required
		return nil
	}

	if err := m.LogLevel.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("logLevel")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CustconfOriginRequestQueue) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CustconfOriginRequestQueue) UnmarshalBinary(b []byte) error {
	var res CustconfOriginRequestQueue
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
