// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// PurgeContentRequestPurgeSelectorType purge content request purge selector type
// swagger:model PurgeContentRequestPurgeSelectorType
type PurgeContentRequestPurgeSelectorType string

const (

	// PurgeContentRequestPurgeSelectorTypeHEADER captures enum value "HEADER"
	PurgeContentRequestPurgeSelectorTypeHEADER PurgeContentRequestPurgeSelectorType = "HEADER"

	// PurgeContentRequestPurgeSelectorTypeTAG captures enum value "TAG"
	PurgeContentRequestPurgeSelectorTypeTAG PurgeContentRequestPurgeSelectorType = "TAG"
)

// for schema
var purgeContentRequestPurgeSelectorTypeEnum []interface{}

func init() {
	var res []PurgeContentRequestPurgeSelectorType
	if err := json.Unmarshal([]byte(`["HEADER","TAG"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		purgeContentRequestPurgeSelectorTypeEnum = append(purgeContentRequestPurgeSelectorTypeEnum, v)
	}
}

func (m PurgeContentRequestPurgeSelectorType) validatePurgeContentRequestPurgeSelectorTypeEnum(path, location string, value PurgeContentRequestPurgeSelectorType) error {
	if err := validate.Enum(path, location, value, purgeContentRequestPurgeSelectorTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this purge content request purge selector type
func (m PurgeContentRequestPurgeSelectorType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePurgeContentRequestPurgeSelectorTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
