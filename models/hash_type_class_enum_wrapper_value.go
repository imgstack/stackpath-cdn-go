// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// HashTypeClassEnumWrapperValue hash type class enum wrapper value
//
// swagger:model HashTypeClassEnumWrapperValue
type HashTypeClassEnumWrapperValue string

const (

	// HashTypeClassEnumWrapperValueUNKNOWN captures enum value "UNKNOWN"
	HashTypeClassEnumWrapperValueUNKNOWN HashTypeClassEnumWrapperValue = "UNKNOWN"

	// HashTypeClassEnumWrapperValueHOST captures enum value "HOST"
	HashTypeClassEnumWrapperValueHOST HashTypeClassEnumWrapperValue = "HOST"

	// HashTypeClassEnumWrapperValueMEDIA captures enum value "MEDIA"
	HashTypeClassEnumWrapperValueMEDIA HashTypeClassEnumWrapperValue = "MEDIA"
)

// for schema
var hashTypeClassEnumWrapperValueEnum []interface{}

func init() {
	var res []HashTypeClassEnumWrapperValue
	if err := json.Unmarshal([]byte(`["UNKNOWN","HOST","MEDIA"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		hashTypeClassEnumWrapperValueEnum = append(hashTypeClassEnumWrapperValueEnum, v)
	}
}

func (m HashTypeClassEnumWrapperValue) validateHashTypeClassEnumWrapperValueEnum(path, location string, value HashTypeClassEnumWrapperValue) error {
	if err := validate.EnumCase(path, location, value, hashTypeClassEnumWrapperValueEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this hash type class enum wrapper value
func (m HashTypeClassEnumWrapperValue) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateHashTypeClassEnumWrapperValueEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this hash type class enum wrapper value based on context it is used
func (m HashTypeClassEnumWrapperValue) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
