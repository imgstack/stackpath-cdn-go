// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// CustconfAwsSignedS3PostV4AuthenticationTypeEnumWrapperValue custconf aws signed s3 post v4 authentication type enum wrapper value
//
// swagger:model custconfAwsSignedS3PostV4AuthenticationTypeEnumWrapperValue
type CustconfAwsSignedS3PostV4AuthenticationTypeEnumWrapperValue string

const (

	// CustconfAwsSignedS3PostV4AuthenticationTypeEnumWrapperValueUNKNOWN captures enum value "UNKNOWN"
	CustconfAwsSignedS3PostV4AuthenticationTypeEnumWrapperValueUNKNOWN CustconfAwsSignedS3PostV4AuthenticationTypeEnumWrapperValue = "UNKNOWN"

	// CustconfAwsSignedS3PostV4AuthenticationTypeEnumWrapperValueQuery captures enum value "query"
	CustconfAwsSignedS3PostV4AuthenticationTypeEnumWrapperValueQuery CustconfAwsSignedS3PostV4AuthenticationTypeEnumWrapperValue = "query"

	// CustconfAwsSignedS3PostV4AuthenticationTypeEnumWrapperValueHeader captures enum value "header"
	CustconfAwsSignedS3PostV4AuthenticationTypeEnumWrapperValueHeader CustconfAwsSignedS3PostV4AuthenticationTypeEnumWrapperValue = "header"
)

// for schema
var custconfAwsSignedS3PostV4AuthenticationTypeEnumWrapperValueEnum []interface{}

func init() {
	var res []CustconfAwsSignedS3PostV4AuthenticationTypeEnumWrapperValue
	if err := json.Unmarshal([]byte(`["UNKNOWN","query","header"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		custconfAwsSignedS3PostV4AuthenticationTypeEnumWrapperValueEnum = append(custconfAwsSignedS3PostV4AuthenticationTypeEnumWrapperValueEnum, v)
	}
}

func (m CustconfAwsSignedS3PostV4AuthenticationTypeEnumWrapperValue) validateCustconfAwsSignedS3PostV4AuthenticationTypeEnumWrapperValueEnum(path, location string, value CustconfAwsSignedS3PostV4AuthenticationTypeEnumWrapperValue) error {
	if err := validate.EnumCase(path, location, value, custconfAwsSignedS3PostV4AuthenticationTypeEnumWrapperValueEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this custconf aws signed s3 post v4 authentication type enum wrapper value
func (m CustconfAwsSignedS3PostV4AuthenticationTypeEnumWrapperValue) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateCustconfAwsSignedS3PostV4AuthenticationTypeEnumWrapperValueEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this custconf aws signed s3 post v4 authentication type enum wrapper value based on context it is used
func (m CustconfAwsSignedS3PostV4AuthenticationTypeEnumWrapperValue) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
