// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ContentDispositionByHeaderDefaultTypeEnumWrapperValue content disposition by header default type enum wrapper value
//
// swagger:model ContentDispositionByHeaderDefaultTypeEnumWrapperValue
type ContentDispositionByHeaderDefaultTypeEnumWrapperValue string

const (

	// ContentDispositionByHeaderDefaultTypeEnumWrapperValueUNKNOWN captures enum value "UNKNOWN"
	ContentDispositionByHeaderDefaultTypeEnumWrapperValueUNKNOWN ContentDispositionByHeaderDefaultTypeEnumWrapperValue = "UNKNOWN"

	// ContentDispositionByHeaderDefaultTypeEnumWrapperValueAttachment captures enum value "attachment"
	ContentDispositionByHeaderDefaultTypeEnumWrapperValueAttachment ContentDispositionByHeaderDefaultTypeEnumWrapperValue = "attachment"

	// ContentDispositionByHeaderDefaultTypeEnumWrapperValueInline captures enum value "inline"
	ContentDispositionByHeaderDefaultTypeEnumWrapperValueInline ContentDispositionByHeaderDefaultTypeEnumWrapperValue = "inline"
)

// for schema
var contentDispositionByHeaderDefaultTypeEnumWrapperValueEnum []interface{}

func init() {
	var res []ContentDispositionByHeaderDefaultTypeEnumWrapperValue
	if err := json.Unmarshal([]byte(`["UNKNOWN","attachment","inline"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		contentDispositionByHeaderDefaultTypeEnumWrapperValueEnum = append(contentDispositionByHeaderDefaultTypeEnumWrapperValueEnum, v)
	}
}

func (m ContentDispositionByHeaderDefaultTypeEnumWrapperValue) validateContentDispositionByHeaderDefaultTypeEnumWrapperValueEnum(path, location string, value ContentDispositionByHeaderDefaultTypeEnumWrapperValue) error {
	if err := validate.EnumCase(path, location, value, contentDispositionByHeaderDefaultTypeEnumWrapperValueEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this content disposition by header default type enum wrapper value
func (m ContentDispositionByHeaderDefaultTypeEnumWrapperValue) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateContentDispositionByHeaderDefaultTypeEnumWrapperValueEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this content disposition by header default type enum wrapper value based on context it is used
func (m ContentDispositionByHeaderDefaultTypeEnumWrapperValue) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
