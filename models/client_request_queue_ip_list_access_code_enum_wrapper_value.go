// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ClientRequestQueueIPListAccessCodeEnumWrapperValue client request queue Ip list access code enum wrapper value
//
// swagger:model ClientRequestQueueIpListAccessCodeEnumWrapperValue
type ClientRequestQueueIPListAccessCodeEnumWrapperValue string

const (

	// ClientRequestQueueIPListAccessCodeEnumWrapperValueUNKNOWN captures enum value "UNKNOWN"
	ClientRequestQueueIPListAccessCodeEnumWrapperValueUNKNOWN ClientRequestQueueIPListAccessCodeEnumWrapperValue = "UNKNOWN"

	// ClientRequestQueueIPListAccessCodeEnumWrapperValueAllow captures enum value "allow"
	ClientRequestQueueIPListAccessCodeEnumWrapperValueAllow ClientRequestQueueIPListAccessCodeEnumWrapperValue = "allow"

	// ClientRequestQueueIPListAccessCodeEnumWrapperValueDeny captures enum value "deny"
	ClientRequestQueueIPListAccessCodeEnumWrapperValueDeny ClientRequestQueueIPListAccessCodeEnumWrapperValue = "deny"
)

// for schema
var clientRequestQueueIpListAccessCodeEnumWrapperValueEnum []interface{}

func init() {
	var res []ClientRequestQueueIPListAccessCodeEnumWrapperValue
	if err := json.Unmarshal([]byte(`["UNKNOWN","allow","deny"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		clientRequestQueueIpListAccessCodeEnumWrapperValueEnum = append(clientRequestQueueIpListAccessCodeEnumWrapperValueEnum, v)
	}
}

func (m ClientRequestQueueIPListAccessCodeEnumWrapperValue) validateClientRequestQueueIPListAccessCodeEnumWrapperValueEnum(path, location string, value ClientRequestQueueIPListAccessCodeEnumWrapperValue) error {
	if err := validate.EnumCase(path, location, value, clientRequestQueueIpListAccessCodeEnumWrapperValueEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this client request queue Ip list access code enum wrapper value
func (m ClientRequestQueueIPListAccessCodeEnumWrapperValue) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateClientRequestQueueIPListAccessCodeEnumWrapperValueEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this client request queue Ip list access code enum wrapper value based on context it is used
func (m ClientRequestQueueIPListAccessCodeEnumWrapperValue) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
