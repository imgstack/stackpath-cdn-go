// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CdnPopScanReport The result of a network scan from a StackPath point of presence to a origin
//
// swagger:model cdnPopScanReport
type CdnPopScanReport struct {

	// The amount of time in milliseconds that a POP scan took to perform an initial connection handshake
	ConnectMs float32 `json:"connectMs,omitempty"`

	// The amount of time in milliseconds that a POP scan took to resolve the target's DNS entry
	DNSMs float32 `json:"dnsMs,omitempty"`

	// The amount of time in milliseconds that a POP scan took to download the target's contents
	DownloadMs float32 `json:"downloadMs,omitempty"`

	// The amount of time in milliseconds that a POP scan took from initial connection to starting to receive the target's contents
	FirstByteMs float32 `json:"firstByteMs,omitempty"`

	// The IATA formatted location code of the StackPath POP that produced a scan report
	PopCode string `json:"popCode,omitempty"`

	// The amount of time in milliseconds that a POP scan took to perform an SSL handshake
	SslMs float32 `json:"sslMs,omitempty"`

	// The total amount of time in milliseconds that a POP scan took to complete
	TotalMs float32 `json:"totalMs,omitempty"`
}

// Validate validates this cdn pop scan report
func (m *CdnPopScanReport) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cdn pop scan report based on context it is used
func (m *CdnPopScanReport) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CdnPopScanReport) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CdnPopScanReport) UnmarshalBinary(b []byte) error {
	var res CdnPopScanReport
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
