// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// CustconfPathModification Request URL rewriting policies can be used to modify the URL path of a CDN
// request.  This policy requires a custom script to be configured.
// This policy requires the Script Engine service enabled on your account. If
// you do not have this service enabled, please contact your sales
// representative for more information.
// swagger:model custconfPathModification
type CustconfPathModification struct {

	// case insensitive match
	CaseInsensitiveMatch bool `json:"caseInsensitiveMatch,omitempty"`

	// enabled
	Enabled bool `json:"enabled,omitempty"`

	// Whether or not to escape the slash character in the regular expression.
	// Turn this off if you will escape this character yourself in the regular
	// expression below.
	EscapeSLASHCharacter bool `json:"escapeSlashCharacter,omitempty"`

	// A regular expression that is matched against incoming request headers to
	// determine which requests are targeted for rewriting. For example,
	// User-Agent: /(?=.*Opera)(?=.*Mobi).*|(.*Android.*)/i will match all Opera
	// Mobile and Android requests. To match all requests, put * here.
	Header string `json:"header,omitempty"`

	// This is used by the API to perform conflict checking.
	ID string `json:"id,omitempty"`

	// include q s param in path
	IncludeQSParamInPath bool `json:"includeQSParamInPath,omitempty"`

	// A regular expression pattern used to identify a portion of the path that is
	// targeted by this policy for replacement.  This should not include the
	// beginning and trailing '/' character.  All other '/' characters will be
	// escaped by default.
	RegEx string `json:"regEx,omitempty"`

	// The string used to replace the portion of the URL targeted by the search
	// pattern
	Replacement string `json:"replacement,omitempty"`
}

// Validate validates this custconf path modification
func (m *CustconfPathModification) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CustconfPathModification) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CustconfPathModification) UnmarshalBinary(b []byte) error {
	var res CustconfPathModification
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
