// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// CdnUpdateSiteScriptRequest A request to update an EdgeEngine script
// swagger:model cdnUpdateSiteScriptRequest
type CdnUpdateSiteScriptRequest struct {

	// The new contents of the EdgeEngine script
	// Format: byte
	Code strfmt.Base64 `json:"code,omitempty"`

	// The HTTP request paths that are handled by the EdgeEngine script
	Paths []string `json:"paths"`
}

// Validate validates this cdn update site script request
func (m *CdnUpdateSiteScriptRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CdnUpdateSiteScriptRequest) validateCode(formats strfmt.Registry) error {

	if swag.IsZero(m.Code) { // not required
		return nil
	}

	// Format "byte" (base64 string) is already validated when unmarshalled

	return nil
}

// MarshalBinary interface implementation
func (m *CdnUpdateSiteScriptRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CdnUpdateSiteScriptRequest) UnmarshalBinary(b []byte) error {
	var res CdnUpdateSiteScriptRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
