// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// CustconfRequestReceipt custconf request receipt
// swagger:model custconfRequestReceipt
type CustconfRequestReceipt struct {

	// The add receipt identifier to access logs setting allows you to track
	// delivery receipts in your access logs. By enabling this, the CDN caching
	// servers will add the X-HW-Receipt Header to each receipt's corresponding
	// Client Request Access Log entry. This is not referring to the Receipt
	// Access Log entry. If this feature is enabled, the customer must have access
	// logging enabled (see the Customer conf type).
	AddIDToAccessLog bool `json:"addIdToAccessLog"`

	// certificate c n
	CertificateCN string `json:"certificateCN,omitempty"`

	// String of values deliminated by a ',' character. This is a pattern match
	// expression for each status code this policy applies to.  For example, 2*,
	// 3* applies this policy to all 200 and 300 level HTTP responses
	ClientResponseCodeFilter string `json:"clientResponseCodeFilter,omitempty"`

	// String of values deliminated by a ',' character.
	ClientResponseHeaderFilter string `json:"clientResponseHeaderFilter,omitempty"`

	// enabled
	Enabled bool `json:"enabled"`

	// String of values deliminated by a ',' character.
	HeaderFilter string `json:"headerFilter,omitempty"`

	// String of values deliminated by a '|' character.
	Headers string `json:"headers,omitempty"`

	// This is used by the API to perform conflict checking.
	ID string `json:"id,omitempty"`

	// The receipt backlog TTL is the maximum age of a pending receipt. Receipts
	// older than the specified amount are dropped. A value of zero indicates that
	// the receipt does not expire and to only try delivering the receipt one time
	// unless MaxRetry is defined.
	MaxAge int64 `json:"maxAge,omitempty"`

	// The retry count is the maximum number of times to retry the delivery of a
	// single receipt before discarding it. This count is in addition to the
	// initial delivery attempt.  For example, a value of 3 means that a delivery
	// edge will try to deliver a receipt up to 4 times.  NOTE: if a MaxAge is
	// also defined, then a receipt will be discarded if it expires before the
	// maximum number of retries has been reached.
	MaxRetry int64 `json:"maxRetry,omitempty"`

	// String of values deliminated by a ',' character.
	MethodFilter string `json:"methodFilter,omitempty"`

	// String of values deliminated by a ',' character.
	PathFilter string `json:"pathFilter,omitempty"`

	// uri format
	URIFormat string `json:"uriFormat,omitempty"`

	// Enable Cert Verification while doing SSL connection to Receipt Origin
	VerifyCertificate bool `json:"verifyCertificate"`
}

// Validate validates this custconf request receipt
func (m *CustconfRequestReceipt) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CustconfRequestReceipt) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CustconfRequestReceipt) UnmarshalBinary(b []byte) error {
	var res CustconfRequestReceipt
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
