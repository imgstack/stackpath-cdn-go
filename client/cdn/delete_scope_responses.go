// Code generated by go-swagger; DO NOT EDIT.

package cdn

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/renderinc/stackpath-cdn-go/models"
)

// DeleteScopeReader is a Reader for the DeleteScope structure.
type DeleteScopeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteScopeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteScopeNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeleteScopeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteScopeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDeleteScopeDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteScopeNoContent creates a DeleteScopeNoContent with default headers values
func NewDeleteScopeNoContent() *DeleteScopeNoContent {
	return &DeleteScopeNoContent{}
}

/*DeleteScopeNoContent handles this case with default header values.

No content
*/
type DeleteScopeNoContent struct {
}

func (o *DeleteScopeNoContent) Error() string {
	return fmt.Sprintf("[DELETE /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}][%d] deleteScopeNoContent ", 204)
}

func (o *DeleteScopeNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteScopeUnauthorized creates a DeleteScopeUnauthorized with default headers values
func NewDeleteScopeUnauthorized() *DeleteScopeUnauthorized {
	return &DeleteScopeUnauthorized{}
}

/*DeleteScopeUnauthorized handles this case with default header values.

Returned when an unauthorized request is attempted.
*/
type DeleteScopeUnauthorized struct {
	Payload *models.APIStatus
}

func (o *DeleteScopeUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}][%d] deleteScopeUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteScopeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteScopeInternalServerError creates a DeleteScopeInternalServerError with default headers values
func NewDeleteScopeInternalServerError() *DeleteScopeInternalServerError {
	return &DeleteScopeInternalServerError{}
}

/*DeleteScopeInternalServerError handles this case with default header values.

Internal server error.
*/
type DeleteScopeInternalServerError struct {
	Payload *models.APIStatus
}

func (o *DeleteScopeInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}][%d] deleteScopeInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteScopeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteScopeDefault creates a DeleteScopeDefault with default headers values
func NewDeleteScopeDefault(code int) *DeleteScopeDefault {
	return &DeleteScopeDefault{
		_statusCode: code,
	}
}

/*DeleteScopeDefault handles this case with default header values.

Default error structure.
*/
type DeleteScopeDefault struct {
	_statusCode int

	Payload *models.APIStatus
}

// Code gets the status code for the delete scope default response
func (o *DeleteScopeDefault) Code() int {
	return o._statusCode
}

func (o *DeleteScopeDefault) Error() string {
	return fmt.Sprintf("[DELETE /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}][%d] DeleteScope default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteScopeDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
