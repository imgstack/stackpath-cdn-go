// Code generated by go-swagger; DO NOT EDIT.

package cdn

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/renderinc/stackpath-cdn-go/models"
)

// CreateScopeReader is a Reader for the CreateScope structure.
type CreateScopeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateScopeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCreateScopeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewCreateScopeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewCreateScopeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewCreateScopeDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateScopeOK creates a CreateScopeOK with default headers values
func NewCreateScopeOK() *CreateScopeOK {
	return &CreateScopeOK{}
}

/*CreateScopeOK handles this case with default header values.

CreateScopeOK create scope o k
*/
type CreateScopeOK struct {
	Payload *models.CdnCreateScopeResponse
}

func (o *CreateScopeOK) Error() string {
	return fmt.Sprintf("[POST /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes][%d] createScopeOK  %+v", 200, o.Payload)
}

func (o *CreateScopeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CdnCreateScopeResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateScopeUnauthorized creates a CreateScopeUnauthorized with default headers values
func NewCreateScopeUnauthorized() *CreateScopeUnauthorized {
	return &CreateScopeUnauthorized{}
}

/*CreateScopeUnauthorized handles this case with default header values.

Returned when an unauthorized request is attempted.
*/
type CreateScopeUnauthorized struct {
	Payload *models.APIStatus
}

func (o *CreateScopeUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes][%d] createScopeUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateScopeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateScopeInternalServerError creates a CreateScopeInternalServerError with default headers values
func NewCreateScopeInternalServerError() *CreateScopeInternalServerError {
	return &CreateScopeInternalServerError{}
}

/*CreateScopeInternalServerError handles this case with default header values.

Internal server error.
*/
type CreateScopeInternalServerError struct {
	Payload *models.APIStatus
}

func (o *CreateScopeInternalServerError) Error() string {
	return fmt.Sprintf("[POST /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes][%d] createScopeInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateScopeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateScopeDefault creates a CreateScopeDefault with default headers values
func NewCreateScopeDefault(code int) *CreateScopeDefault {
	return &CreateScopeDefault{
		_statusCode: code,
	}
}

/*CreateScopeDefault handles this case with default header values.

Default error structure.
*/
type CreateScopeDefault struct {
	_statusCode int

	Payload *models.APIStatus
}

// Code gets the status code for the create scope default response
func (o *CreateScopeDefault) Code() int {
	return o._statusCode
}

func (o *CreateScopeDefault) Error() string {
	return fmt.Sprintf("[POST /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes][%d] CreateScope default  %+v", o._statusCode, o.Payload)
}

func (o *CreateScopeDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
