// Code generated by go-swagger; DO NOT EDIT.

package cdn

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/renderinc/stackpath-cdn-go/models"
)

// GetCertificatesReader is a Reader for the GetCertificates structure.
type GetCertificatesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCertificatesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCertificatesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetCertificatesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCertificatesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetCertificatesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetCertificatesOK creates a GetCertificatesOK with default headers values
func NewGetCertificatesOK() *GetCertificatesOK {
	return &GetCertificatesOK{}
}

/*GetCertificatesOK handles this case with default header values.

GetCertificatesOK get certificates o k
*/
type GetCertificatesOK struct {
	Payload *models.CdnGetCertificatesResponse
}

func (o *GetCertificatesOK) Error() string {
	return fmt.Sprintf("[GET /cdn/v1/stacks/{stack_id}/certificates][%d] getCertificatesOK  %+v", 200, o.Payload)
}

func (o *GetCertificatesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CdnGetCertificatesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCertificatesUnauthorized creates a GetCertificatesUnauthorized with default headers values
func NewGetCertificatesUnauthorized() *GetCertificatesUnauthorized {
	return &GetCertificatesUnauthorized{}
}

/*GetCertificatesUnauthorized handles this case with default header values.

Returned when an unauthorized request is attempted.
*/
type GetCertificatesUnauthorized struct {
	Payload *models.APIStatus
}

func (o *GetCertificatesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cdn/v1/stacks/{stack_id}/certificates][%d] getCertificatesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCertificatesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCertificatesInternalServerError creates a GetCertificatesInternalServerError with default headers values
func NewGetCertificatesInternalServerError() *GetCertificatesInternalServerError {
	return &GetCertificatesInternalServerError{}
}

/*GetCertificatesInternalServerError handles this case with default header values.

Internal server error.
*/
type GetCertificatesInternalServerError struct {
	Payload *models.APIStatus
}

func (o *GetCertificatesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /cdn/v1/stacks/{stack_id}/certificates][%d] getCertificatesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCertificatesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCertificatesDefault creates a GetCertificatesDefault with default headers values
func NewGetCertificatesDefault(code int) *GetCertificatesDefault {
	return &GetCertificatesDefault{
		_statusCode: code,
	}
}

/*GetCertificatesDefault handles this case with default header values.

Default error structure.
*/
type GetCertificatesDefault struct {
	_statusCode int

	Payload *models.APIStatus
}

// Code gets the status code for the get certificates default response
func (o *GetCertificatesDefault) Code() int {
	return o._statusCode
}

func (o *GetCertificatesDefault) Error() string {
	return fmt.Sprintf("[GET /cdn/v1/stacks/{stack_id}/certificates][%d] GetCertificates default  %+v", o._statusCode, o.Payload)
}

func (o *GetCertificatesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
