// Code generated by go-swagger; DO NOT EDIT.

package cdn

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/renderinc/stackpath-cdn-go/models"
)

// GetScopeRulesReader is a Reader for the GetScopeRules structure.
type GetScopeRulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetScopeRulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetScopeRulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetScopeRulesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetScopeRulesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetScopeRulesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetScopeRulesOK creates a GetScopeRulesOK with default headers values
func NewGetScopeRulesOK() *GetScopeRulesOK {
	return &GetScopeRulesOK{}
}

/* GetScopeRulesOK describes a response with status code 200, with default header values.

GetScopeRulesOK get scope rules o k
*/
type GetScopeRulesOK struct {
	Payload *models.CdnGetScopeRulesResponse
}

func (o *GetScopeRulesOK) Error() string {
	return fmt.Sprintf("[GET /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/rules][%d] getScopeRulesOK  %+v", 200, o.Payload)
}
func (o *GetScopeRulesOK) GetPayload() *models.CdnGetScopeRulesResponse {
	return o.Payload
}

func (o *GetScopeRulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CdnGetScopeRulesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScopeRulesUnauthorized creates a GetScopeRulesUnauthorized with default headers values
func NewGetScopeRulesUnauthorized() *GetScopeRulesUnauthorized {
	return &GetScopeRulesUnauthorized{}
}

/* GetScopeRulesUnauthorized describes a response with status code 401, with default header values.

Returned when an unauthorized request is attempted.
*/
type GetScopeRulesUnauthorized struct {
	Payload *models.APIStatus
}

func (o *GetScopeRulesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/rules][%d] getScopeRulesUnauthorized  %+v", 401, o.Payload)
}
func (o *GetScopeRulesUnauthorized) GetPayload() *models.APIStatus {
	return o.Payload
}

func (o *GetScopeRulesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScopeRulesInternalServerError creates a GetScopeRulesInternalServerError with default headers values
func NewGetScopeRulesInternalServerError() *GetScopeRulesInternalServerError {
	return &GetScopeRulesInternalServerError{}
}

/* GetScopeRulesInternalServerError describes a response with status code 500, with default header values.

Internal server error.
*/
type GetScopeRulesInternalServerError struct {
	Payload *models.APIStatus
}

func (o *GetScopeRulesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/rules][%d] getScopeRulesInternalServerError  %+v", 500, o.Payload)
}
func (o *GetScopeRulesInternalServerError) GetPayload() *models.APIStatus {
	return o.Payload
}

func (o *GetScopeRulesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScopeRulesDefault creates a GetScopeRulesDefault with default headers values
func NewGetScopeRulesDefault(code int) *GetScopeRulesDefault {
	return &GetScopeRulesDefault{
		_statusCode: code,
	}
}

/* GetScopeRulesDefault describes a response with status code -1, with default header values.

Default error structure.
*/
type GetScopeRulesDefault struct {
	_statusCode int

	Payload *models.APIStatus
}

// Code gets the status code for the get scope rules default response
func (o *GetScopeRulesDefault) Code() int {
	return o._statusCode
}

func (o *GetScopeRulesDefault) Error() string {
	return fmt.Sprintf("[GET /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/rules][%d] GetScopeRules default  %+v", o._statusCode, o.Payload)
}
func (o *GetScopeRulesDefault) GetPayload() *models.APIStatus {
	return o.Payload
}

func (o *GetScopeRulesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
