// Code generated by go-swagger; DO NOT EDIT.

package cdn

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/renderinc/stackpath-cdn-go/models"
)

// GetClosestPopReader is a Reader for the GetClosestPop structure.
type GetClosestPopReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClosestPopReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetClosestPopOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetClosestPopUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetClosestPopInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetClosestPopDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetClosestPopOK creates a GetClosestPopOK with default headers values
func NewGetClosestPopOK() *GetClosestPopOK {
	return &GetClosestPopOK{}
}

/*GetClosestPopOK handles this case with default header values.

GetClosestPopOK get closest pop o k
*/
type GetClosestPopOK struct {
	Payload *models.CdnGetClosestPopResponse
}

func (o *GetClosestPopOK) Error() string {
	return fmt.Sprintf("[GET /cdn/v1/pops/closest][%d] getClosestPopOK  %+v", 200, o.Payload)
}

func (o *GetClosestPopOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CdnGetClosestPopResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClosestPopUnauthorized creates a GetClosestPopUnauthorized with default headers values
func NewGetClosestPopUnauthorized() *GetClosestPopUnauthorized {
	return &GetClosestPopUnauthorized{}
}

/*GetClosestPopUnauthorized handles this case with default header values.

Returned when an unauthorized request is attempted.
*/
type GetClosestPopUnauthorized struct {
	Payload *models.APIStatus
}

func (o *GetClosestPopUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cdn/v1/pops/closest][%d] getClosestPopUnauthorized  %+v", 401, o.Payload)
}

func (o *GetClosestPopUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClosestPopInternalServerError creates a GetClosestPopInternalServerError with default headers values
func NewGetClosestPopInternalServerError() *GetClosestPopInternalServerError {
	return &GetClosestPopInternalServerError{}
}

/*GetClosestPopInternalServerError handles this case with default header values.

Internal server error.
*/
type GetClosestPopInternalServerError struct {
	Payload *models.APIStatus
}

func (o *GetClosestPopInternalServerError) Error() string {
	return fmt.Sprintf("[GET /cdn/v1/pops/closest][%d] getClosestPopInternalServerError  %+v", 500, o.Payload)
}

func (o *GetClosestPopInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClosestPopDefault creates a GetClosestPopDefault with default headers values
func NewGetClosestPopDefault(code int) *GetClosestPopDefault {
	return &GetClosestPopDefault{
		_statusCode: code,
	}
}

/*GetClosestPopDefault handles this case with default header values.

Default error structure.
*/
type GetClosestPopDefault struct {
	_statusCode int

	Payload *models.APIStatus
}

// Code gets the status code for the get closest pop default response
func (o *GetClosestPopDefault) Code() int {
	return o._statusCode
}

func (o *GetClosestPopDefault) Error() string {
	return fmt.Sprintf("[GET /cdn/v1/pops/closest][%d] GetClosestPop default  %+v", o._statusCode, o.Payload)
}

func (o *GetClosestPopDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
