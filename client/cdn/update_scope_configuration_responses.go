// Code generated by go-swagger; DO NOT EDIT.

package cdn

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/renderinc/stackpath-cdn-go/models"
)

// UpdateScopeConfigurationReader is a Reader for the UpdateScopeConfiguration structure.
type UpdateScopeConfigurationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateScopeConfigurationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateScopeConfigurationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewUpdateScopeConfigurationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUpdateScopeConfigurationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewUpdateScopeConfigurationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateScopeConfigurationOK creates a UpdateScopeConfigurationOK with default headers values
func NewUpdateScopeConfigurationOK() *UpdateScopeConfigurationOK {
	return &UpdateScopeConfigurationOK{}
}

/*UpdateScopeConfigurationOK handles this case with default header values.

UpdateScopeConfigurationOK update scope configuration o k
*/
type UpdateScopeConfigurationOK struct {
	Payload *models.CdnUpdateScopeConfigurationResponse
}

func (o *UpdateScopeConfigurationOK) Error() string {
	return fmt.Sprintf("[PATCH /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/configuration][%d] updateScopeConfigurationOK  %+v", 200, o.Payload)
}

func (o *UpdateScopeConfigurationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CdnUpdateScopeConfigurationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateScopeConfigurationUnauthorized creates a UpdateScopeConfigurationUnauthorized with default headers values
func NewUpdateScopeConfigurationUnauthorized() *UpdateScopeConfigurationUnauthorized {
	return &UpdateScopeConfigurationUnauthorized{}
}

/*UpdateScopeConfigurationUnauthorized handles this case with default header values.

Returned when an unauthorized request is attempted.
*/
type UpdateScopeConfigurationUnauthorized struct {
	Payload *models.APIStatus
}

func (o *UpdateScopeConfigurationUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/configuration][%d] updateScopeConfigurationUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateScopeConfigurationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateScopeConfigurationInternalServerError creates a UpdateScopeConfigurationInternalServerError with default headers values
func NewUpdateScopeConfigurationInternalServerError() *UpdateScopeConfigurationInternalServerError {
	return &UpdateScopeConfigurationInternalServerError{}
}

/*UpdateScopeConfigurationInternalServerError handles this case with default header values.

Internal server error.
*/
type UpdateScopeConfigurationInternalServerError struct {
	Payload *models.APIStatus
}

func (o *UpdateScopeConfigurationInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/configuration][%d] updateScopeConfigurationInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateScopeConfigurationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateScopeConfigurationDefault creates a UpdateScopeConfigurationDefault with default headers values
func NewUpdateScopeConfigurationDefault(code int) *UpdateScopeConfigurationDefault {
	return &UpdateScopeConfigurationDefault{
		_statusCode: code,
	}
}

/*UpdateScopeConfigurationDefault handles this case with default header values.

Default error structure.
*/
type UpdateScopeConfigurationDefault struct {
	_statusCode int

	Payload *models.APIStatus
}

// Code gets the status code for the update scope configuration default response
func (o *UpdateScopeConfigurationDefault) Code() int {
	return o._statusCode
}

func (o *UpdateScopeConfigurationDefault) Error() string {
	return fmt.Sprintf("[PATCH /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/configuration][%d] UpdateScopeConfiguration default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateScopeConfigurationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
