// Code generated by go-swagger; DO NOT EDIT.

package cdn

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/renderinc/stackpath-cdn-go/models"
)

// GetScopeOriginsReader is a Reader for the GetScopeOrigins structure.
type GetScopeOriginsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetScopeOriginsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetScopeOriginsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetScopeOriginsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetScopeOriginsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetScopeOriginsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetScopeOriginsOK creates a GetScopeOriginsOK with default headers values
func NewGetScopeOriginsOK() *GetScopeOriginsOK {
	return &GetScopeOriginsOK{}
}

/*GetScopeOriginsOK handles this case with default header values.

GetScopeOriginsOK get scope origins o k
*/
type GetScopeOriginsOK struct {
	Payload *models.CdnGetScopeOriginsResponse
}

func (o *GetScopeOriginsOK) Error() string {
	return fmt.Sprintf("[GET /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/origins][%d] getScopeOriginsOK  %+v", 200, o.Payload)
}

func (o *GetScopeOriginsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CdnGetScopeOriginsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScopeOriginsUnauthorized creates a GetScopeOriginsUnauthorized with default headers values
func NewGetScopeOriginsUnauthorized() *GetScopeOriginsUnauthorized {
	return &GetScopeOriginsUnauthorized{}
}

/*GetScopeOriginsUnauthorized handles this case with default header values.

Returned when an unauthorized request is attempted.
*/
type GetScopeOriginsUnauthorized struct {
	Payload *models.APIStatus
}

func (o *GetScopeOriginsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/origins][%d] getScopeOriginsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetScopeOriginsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScopeOriginsInternalServerError creates a GetScopeOriginsInternalServerError with default headers values
func NewGetScopeOriginsInternalServerError() *GetScopeOriginsInternalServerError {
	return &GetScopeOriginsInternalServerError{}
}

/*GetScopeOriginsInternalServerError handles this case with default header values.

Internal server error.
*/
type GetScopeOriginsInternalServerError struct {
	Payload *models.APIStatus
}

func (o *GetScopeOriginsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/origins][%d] getScopeOriginsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetScopeOriginsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScopeOriginsDefault creates a GetScopeOriginsDefault with default headers values
func NewGetScopeOriginsDefault(code int) *GetScopeOriginsDefault {
	return &GetScopeOriginsDefault{
		_statusCode: code,
	}
}

/*GetScopeOriginsDefault handles this case with default header values.

Default error structure.
*/
type GetScopeOriginsDefault struct {
	_statusCode int

	Payload *models.APIStatus
}

// Code gets the status code for the get scope origins default response
func (o *GetScopeOriginsDefault) Code() int {
	return o._statusCode
}

func (o *GetScopeOriginsDefault) Error() string {
	return fmt.Sprintf("[GET /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/origins][%d] GetScopeOrigins default  %+v", o._statusCode, o.Payload)
}

func (o *GetScopeOriginsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
