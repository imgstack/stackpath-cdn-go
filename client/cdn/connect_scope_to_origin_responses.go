// Code generated by go-swagger; DO NOT EDIT.

package cdn

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/renderinc/stackpath-cdn-go/models"
)

// ConnectScopeToOriginReader is a Reader for the ConnectScopeToOrigin structure.
type ConnectScopeToOriginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ConnectScopeToOriginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewConnectScopeToOriginOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewConnectScopeToOriginUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewConnectScopeToOriginInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewConnectScopeToOriginDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewConnectScopeToOriginOK creates a ConnectScopeToOriginOK with default headers values
func NewConnectScopeToOriginOK() *ConnectScopeToOriginOK {
	return &ConnectScopeToOriginOK{}
}

/* ConnectScopeToOriginOK describes a response with status code 200, with default header values.

ConnectScopeToOriginOK connect scope to origin o k
*/
type ConnectScopeToOriginOK struct {
	Payload *models.CdnConnectScopeToOriginResponse
}

func (o *ConnectScopeToOriginOK) Error() string {
	return fmt.Sprintf("[POST /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/origins][%d] connectScopeToOriginOK  %+v", 200, o.Payload)
}
func (o *ConnectScopeToOriginOK) GetPayload() *models.CdnConnectScopeToOriginResponse {
	return o.Payload
}

func (o *ConnectScopeToOriginOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CdnConnectScopeToOriginResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectScopeToOriginUnauthorized creates a ConnectScopeToOriginUnauthorized with default headers values
func NewConnectScopeToOriginUnauthorized() *ConnectScopeToOriginUnauthorized {
	return &ConnectScopeToOriginUnauthorized{}
}

/* ConnectScopeToOriginUnauthorized describes a response with status code 401, with default header values.

Returned when an unauthorized request is attempted.
*/
type ConnectScopeToOriginUnauthorized struct {
	Payload *models.APIStatus
}

func (o *ConnectScopeToOriginUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/origins][%d] connectScopeToOriginUnauthorized  %+v", 401, o.Payload)
}
func (o *ConnectScopeToOriginUnauthorized) GetPayload() *models.APIStatus {
	return o.Payload
}

func (o *ConnectScopeToOriginUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectScopeToOriginInternalServerError creates a ConnectScopeToOriginInternalServerError with default headers values
func NewConnectScopeToOriginInternalServerError() *ConnectScopeToOriginInternalServerError {
	return &ConnectScopeToOriginInternalServerError{}
}

/* ConnectScopeToOriginInternalServerError describes a response with status code 500, with default header values.

Internal server error.
*/
type ConnectScopeToOriginInternalServerError struct {
	Payload *models.APIStatus
}

func (o *ConnectScopeToOriginInternalServerError) Error() string {
	return fmt.Sprintf("[POST /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/origins][%d] connectScopeToOriginInternalServerError  %+v", 500, o.Payload)
}
func (o *ConnectScopeToOriginInternalServerError) GetPayload() *models.APIStatus {
	return o.Payload
}

func (o *ConnectScopeToOriginInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectScopeToOriginDefault creates a ConnectScopeToOriginDefault with default headers values
func NewConnectScopeToOriginDefault(code int) *ConnectScopeToOriginDefault {
	return &ConnectScopeToOriginDefault{
		_statusCode: code,
	}
}

/* ConnectScopeToOriginDefault describes a response with status code -1, with default header values.

Default error structure.
*/
type ConnectScopeToOriginDefault struct {
	_statusCode int

	Payload *models.APIStatus
}

// Code gets the status code for the connect scope to origin default response
func (o *ConnectScopeToOriginDefault) Code() int {
	return o._statusCode
}

func (o *ConnectScopeToOriginDefault) Error() string {
	return fmt.Sprintf("[POST /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/origins][%d] ConnectScopeToOrigin default  %+v", o._statusCode, o.Payload)
}
func (o *ConnectScopeToOriginDefault) GetPayload() *models.APIStatus {
	return o.Payload
}

func (o *ConnectScopeToOriginDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
