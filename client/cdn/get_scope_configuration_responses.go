// Code generated by go-swagger; DO NOT EDIT.

package cdn

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/renderinc/stackpath-cdn-go/models"
)

// GetScopeConfigurationReader is a Reader for the GetScopeConfiguration structure.
type GetScopeConfigurationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetScopeConfigurationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetScopeConfigurationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetScopeConfigurationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetScopeConfigurationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetScopeConfigurationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetScopeConfigurationOK creates a GetScopeConfigurationOK with default headers values
func NewGetScopeConfigurationOK() *GetScopeConfigurationOK {
	return &GetScopeConfigurationOK{}
}

/*GetScopeConfigurationOK handles this case with default header values.

GetScopeConfigurationOK get scope configuration o k
*/
type GetScopeConfigurationOK struct {
	Payload *models.CdnGetScopeConfigurationResponse
}

func (o *GetScopeConfigurationOK) Error() string {
	return fmt.Sprintf("[GET /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/configuration][%d] getScopeConfigurationOK  %+v", 200, o.Payload)
}

func (o *GetScopeConfigurationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CdnGetScopeConfigurationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScopeConfigurationUnauthorized creates a GetScopeConfigurationUnauthorized with default headers values
func NewGetScopeConfigurationUnauthorized() *GetScopeConfigurationUnauthorized {
	return &GetScopeConfigurationUnauthorized{}
}

/*GetScopeConfigurationUnauthorized handles this case with default header values.

Returned when an unauthorized request is attempted.
*/
type GetScopeConfigurationUnauthorized struct {
	Payload *models.APIStatus
}

func (o *GetScopeConfigurationUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/configuration][%d] getScopeConfigurationUnauthorized  %+v", 401, o.Payload)
}

func (o *GetScopeConfigurationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScopeConfigurationInternalServerError creates a GetScopeConfigurationInternalServerError with default headers values
func NewGetScopeConfigurationInternalServerError() *GetScopeConfigurationInternalServerError {
	return &GetScopeConfigurationInternalServerError{}
}

/*GetScopeConfigurationInternalServerError handles this case with default header values.

Internal server error.
*/
type GetScopeConfigurationInternalServerError struct {
	Payload *models.APIStatus
}

func (o *GetScopeConfigurationInternalServerError) Error() string {
	return fmt.Sprintf("[GET /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/configuration][%d] getScopeConfigurationInternalServerError  %+v", 500, o.Payload)
}

func (o *GetScopeConfigurationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScopeConfigurationDefault creates a GetScopeConfigurationDefault with default headers values
func NewGetScopeConfigurationDefault(code int) *GetScopeConfigurationDefault {
	return &GetScopeConfigurationDefault{
		_statusCode: code,
	}
}

/*GetScopeConfigurationDefault handles this case with default header values.

Default error structure.
*/
type GetScopeConfigurationDefault struct {
	_statusCode int

	Payload *models.APIStatus
}

// Code gets the status code for the get scope configuration default response
func (o *GetScopeConfigurationDefault) Code() int {
	return o._statusCode
}

func (o *GetScopeConfigurationDefault) Error() string {
	return fmt.Sprintf("[GET /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/configuration][%d] GetScopeConfiguration default  %+v", o._statusCode, o.Payload)
}

func (o *GetScopeConfigurationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
