// Code generated by go-swagger; DO NOT EDIT.

package cdn

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteScopeParams creates a new DeleteScopeParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteScopeParams() *DeleteScopeParams {
	return &DeleteScopeParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteScopeParamsWithTimeout creates a new DeleteScopeParams object
// with the ability to set a timeout on a request.
func NewDeleteScopeParamsWithTimeout(timeout time.Duration) *DeleteScopeParams {
	return &DeleteScopeParams{
		timeout: timeout,
	}
}

// NewDeleteScopeParamsWithContext creates a new DeleteScopeParams object
// with the ability to set a context for a request.
func NewDeleteScopeParamsWithContext(ctx context.Context) *DeleteScopeParams {
	return &DeleteScopeParams{
		Context: ctx,
	}
}

// NewDeleteScopeParamsWithHTTPClient creates a new DeleteScopeParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteScopeParamsWithHTTPClient(client *http.Client) *DeleteScopeParams {
	return &DeleteScopeParams{
		HTTPClient: client,
	}
}

/* DeleteScopeParams contains all the parameters to send to the API endpoint
   for the delete scope operation.

   Typically these are written to a http.Request.
*/
type DeleteScopeParams struct {

	/* ScopeID.

	   The ID of the scope to delete
	*/
	ScopeID string

	/* SiteID.

	   The ID of the site containing the scope to delete
	*/
	SiteID string

	/* StackID.

	   The ID of the stack containing the site containing the scope to delete
	*/
	StackID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete scope params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteScopeParams) WithDefaults() *DeleteScopeParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete scope params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteScopeParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete scope params
func (o *DeleteScopeParams) WithTimeout(timeout time.Duration) *DeleteScopeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete scope params
func (o *DeleteScopeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete scope params
func (o *DeleteScopeParams) WithContext(ctx context.Context) *DeleteScopeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete scope params
func (o *DeleteScopeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete scope params
func (o *DeleteScopeParams) WithHTTPClient(client *http.Client) *DeleteScopeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete scope params
func (o *DeleteScopeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithScopeID adds the scopeID to the delete scope params
func (o *DeleteScopeParams) WithScopeID(scopeID string) *DeleteScopeParams {
	o.SetScopeID(scopeID)
	return o
}

// SetScopeID adds the scopeId to the delete scope params
func (o *DeleteScopeParams) SetScopeID(scopeID string) {
	o.ScopeID = scopeID
}

// WithSiteID adds the siteID to the delete scope params
func (o *DeleteScopeParams) WithSiteID(siteID string) *DeleteScopeParams {
	o.SetSiteID(siteID)
	return o
}

// SetSiteID adds the siteId to the delete scope params
func (o *DeleteScopeParams) SetSiteID(siteID string) {
	o.SiteID = siteID
}

// WithStackID adds the stackID to the delete scope params
func (o *DeleteScopeParams) WithStackID(stackID string) *DeleteScopeParams {
	o.SetStackID(stackID)
	return o
}

// SetStackID adds the stackId to the delete scope params
func (o *DeleteScopeParams) SetStackID(stackID string) {
	o.StackID = stackID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteScopeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param scope_id
	if err := r.SetPathParam("scope_id", o.ScopeID); err != nil {
		return err
	}

	// path param site_id
	if err := r.SetPathParam("site_id", o.SiteID); err != nil {
		return err
	}

	// path param stack_id
	if err := r.SetPathParam("stack_id", o.StackID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
