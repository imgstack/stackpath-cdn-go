// Code generated by go-swagger; DO NOT EDIT.

package cdn

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/renderinc/stackpath-cdn-go/models"
)

// CreateScopeRuleReader is a Reader for the CreateScopeRule structure.
type CreateScopeRuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateScopeRuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateScopeRuleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateScopeRuleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateScopeRuleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateScopeRuleDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateScopeRuleOK creates a CreateScopeRuleOK with default headers values
func NewCreateScopeRuleOK() *CreateScopeRuleOK {
	return &CreateScopeRuleOK{}
}

/* CreateScopeRuleOK describes a response with status code 200, with default header values.

CreateScopeRuleOK create scope rule o k
*/
type CreateScopeRuleOK struct {
	Payload *models.CdnCreateScopeRuleResponse
}

func (o *CreateScopeRuleOK) Error() string {
	return fmt.Sprintf("[POST /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/rules][%d] createScopeRuleOK  %+v", 200, o.Payload)
}
func (o *CreateScopeRuleOK) GetPayload() *models.CdnCreateScopeRuleResponse {
	return o.Payload
}

func (o *CreateScopeRuleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CdnCreateScopeRuleResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateScopeRuleUnauthorized creates a CreateScopeRuleUnauthorized with default headers values
func NewCreateScopeRuleUnauthorized() *CreateScopeRuleUnauthorized {
	return &CreateScopeRuleUnauthorized{}
}

/* CreateScopeRuleUnauthorized describes a response with status code 401, with default header values.

Returned when an unauthorized request is attempted.
*/
type CreateScopeRuleUnauthorized struct {
	Payload *models.APIStatus
}

func (o *CreateScopeRuleUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/rules][%d] createScopeRuleUnauthorized  %+v", 401, o.Payload)
}
func (o *CreateScopeRuleUnauthorized) GetPayload() *models.APIStatus {
	return o.Payload
}

func (o *CreateScopeRuleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateScopeRuleInternalServerError creates a CreateScopeRuleInternalServerError with default headers values
func NewCreateScopeRuleInternalServerError() *CreateScopeRuleInternalServerError {
	return &CreateScopeRuleInternalServerError{}
}

/* CreateScopeRuleInternalServerError describes a response with status code 500, with default header values.

Internal server error.
*/
type CreateScopeRuleInternalServerError struct {
	Payload *models.APIStatus
}

func (o *CreateScopeRuleInternalServerError) Error() string {
	return fmt.Sprintf("[POST /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/rules][%d] createScopeRuleInternalServerError  %+v", 500, o.Payload)
}
func (o *CreateScopeRuleInternalServerError) GetPayload() *models.APIStatus {
	return o.Payload
}

func (o *CreateScopeRuleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateScopeRuleDefault creates a CreateScopeRuleDefault with default headers values
func NewCreateScopeRuleDefault(code int) *CreateScopeRuleDefault {
	return &CreateScopeRuleDefault{
		_statusCode: code,
	}
}

/* CreateScopeRuleDefault describes a response with status code -1, with default header values.

Default error structure.
*/
type CreateScopeRuleDefault struct {
	_statusCode int

	Payload *models.APIStatus
}

// Code gets the status code for the create scope rule default response
func (o *CreateScopeRuleDefault) Code() int {
	return o._statusCode
}

func (o *CreateScopeRuleDefault) Error() string {
	return fmt.Sprintf("[POST /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/rules][%d] CreateScopeRule default  %+v", o._statusCode, o.Payload)
}
func (o *CreateScopeRuleDefault) GetPayload() *models.APIStatus {
	return o.Payload
}

func (o *CreateScopeRuleDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
