// Code generated by go-swagger; DO NOT EDIT.

package cdn

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/renderinc/stackpath-cdn-go/models"
)

// GetCertificateSitesReader is a Reader for the GetCertificateSites structure.
type GetCertificateSitesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCertificateSitesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCertificateSitesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetCertificateSitesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCertificateSitesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetCertificateSitesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetCertificateSitesOK creates a GetCertificateSitesOK with default headers values
func NewGetCertificateSitesOK() *GetCertificateSitesOK {
	return &GetCertificateSitesOK{}
}

/*GetCertificateSitesOK handles this case with default header values.

GetCertificateSitesOK get certificate sites o k
*/
type GetCertificateSitesOK struct {
	Payload *models.CdnGetCertificateSitesResponse
}

func (o *GetCertificateSitesOK) Error() string {
	return fmt.Sprintf("[GET /cdn/v1/stacks/{stack_id}/certificates/{certificate_id}/sites][%d] getCertificateSitesOK  %+v", 200, o.Payload)
}

func (o *GetCertificateSitesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CdnGetCertificateSitesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCertificateSitesUnauthorized creates a GetCertificateSitesUnauthorized with default headers values
func NewGetCertificateSitesUnauthorized() *GetCertificateSitesUnauthorized {
	return &GetCertificateSitesUnauthorized{}
}

/*GetCertificateSitesUnauthorized handles this case with default header values.

Returned when an unauthorized request is attempted.
*/
type GetCertificateSitesUnauthorized struct {
	Payload *models.APIStatus
}

func (o *GetCertificateSitesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cdn/v1/stacks/{stack_id}/certificates/{certificate_id}/sites][%d] getCertificateSitesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCertificateSitesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCertificateSitesInternalServerError creates a GetCertificateSitesInternalServerError with default headers values
func NewGetCertificateSitesInternalServerError() *GetCertificateSitesInternalServerError {
	return &GetCertificateSitesInternalServerError{}
}

/*GetCertificateSitesInternalServerError handles this case with default header values.

Internal server error.
*/
type GetCertificateSitesInternalServerError struct {
	Payload *models.APIStatus
}

func (o *GetCertificateSitesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /cdn/v1/stacks/{stack_id}/certificates/{certificate_id}/sites][%d] getCertificateSitesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCertificateSitesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCertificateSitesDefault creates a GetCertificateSitesDefault with default headers values
func NewGetCertificateSitesDefault(code int) *GetCertificateSitesDefault {
	return &GetCertificateSitesDefault{
		_statusCode: code,
	}
}

/*GetCertificateSitesDefault handles this case with default header values.

Default error structure.
*/
type GetCertificateSitesDefault struct {
	_statusCode int

	Payload *models.APIStatus
}

// Code gets the status code for the get certificate sites default response
func (o *GetCertificateSitesDefault) Code() int {
	return o._statusCode
}

func (o *GetCertificateSitesDefault) Error() string {
	return fmt.Sprintf("[GET /cdn/v1/stacks/{stack_id}/certificates/{certificate_id}/sites][%d] GetCertificateSites default  %+v", o._statusCode, o.Payload)
}

func (o *GetCertificateSitesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
