// Code generated by go-swagger; DO NOT EDIT.

package cdn

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/renderinc/stackpath-cdn-go/models"
)

// CreateCertificateReader is a Reader for the CreateCertificate structure.
type CreateCertificateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateCertificateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateCertificateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateCertificateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateCertificateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateCertificateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateCertificateOK creates a CreateCertificateOK with default headers values
func NewCreateCertificateOK() *CreateCertificateOK {
	return &CreateCertificateOK{}
}

/* CreateCertificateOK describes a response with status code 200, with default header values.

CreateCertificateOK create certificate o k
*/
type CreateCertificateOK struct {
	Payload *models.CdnCreateCertificateResponse
}

func (o *CreateCertificateOK) Error() string {
	return fmt.Sprintf("[POST /cdn/v1/stacks/{stack_id}/certificates][%d] createCertificateOK  %+v", 200, o.Payload)
}
func (o *CreateCertificateOK) GetPayload() *models.CdnCreateCertificateResponse {
	return o.Payload
}

func (o *CreateCertificateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CdnCreateCertificateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCertificateUnauthorized creates a CreateCertificateUnauthorized with default headers values
func NewCreateCertificateUnauthorized() *CreateCertificateUnauthorized {
	return &CreateCertificateUnauthorized{}
}

/* CreateCertificateUnauthorized describes a response with status code 401, with default header values.

Returned when an unauthorized request is attempted.
*/
type CreateCertificateUnauthorized struct {
	Payload *models.APIStatus
}

func (o *CreateCertificateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cdn/v1/stacks/{stack_id}/certificates][%d] createCertificateUnauthorized  %+v", 401, o.Payload)
}
func (o *CreateCertificateUnauthorized) GetPayload() *models.APIStatus {
	return o.Payload
}

func (o *CreateCertificateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCertificateInternalServerError creates a CreateCertificateInternalServerError with default headers values
func NewCreateCertificateInternalServerError() *CreateCertificateInternalServerError {
	return &CreateCertificateInternalServerError{}
}

/* CreateCertificateInternalServerError describes a response with status code 500, with default header values.

Internal server error.
*/
type CreateCertificateInternalServerError struct {
	Payload *models.APIStatus
}

func (o *CreateCertificateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /cdn/v1/stacks/{stack_id}/certificates][%d] createCertificateInternalServerError  %+v", 500, o.Payload)
}
func (o *CreateCertificateInternalServerError) GetPayload() *models.APIStatus {
	return o.Payload
}

func (o *CreateCertificateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCertificateDefault creates a CreateCertificateDefault with default headers values
func NewCreateCertificateDefault(code int) *CreateCertificateDefault {
	return &CreateCertificateDefault{
		_statusCode: code,
	}
}

/* CreateCertificateDefault describes a response with status code -1, with default header values.

Default error structure.
*/
type CreateCertificateDefault struct {
	_statusCode int

	Payload *models.APIStatus
}

// Code gets the status code for the create certificate default response
func (o *CreateCertificateDefault) Code() int {
	return o._statusCode
}

func (o *CreateCertificateDefault) Error() string {
	return fmt.Sprintf("[POST /cdn/v1/stacks/{stack_id}/certificates][%d] CreateCertificate default  %+v", o._statusCode, o.Payload)
}
func (o *CreateCertificateDefault) GetPayload() *models.APIStatus {
	return o.Payload
}

func (o *CreateCertificateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
