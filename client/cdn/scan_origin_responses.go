// Code generated by go-swagger; DO NOT EDIT.

package cdn

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/renderinc/stackpath-cdn-go/models"
)

// ScanOriginReader is a Reader for the ScanOrigin structure.
type ScanOriginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ScanOriginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewScanOriginOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewScanOriginUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewScanOriginInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewScanOriginDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewScanOriginOK creates a ScanOriginOK with default headers values
func NewScanOriginOK() *ScanOriginOK {
	return &ScanOriginOK{}
}

/*ScanOriginOK handles this case with default header values.

ScanOriginOK scan origin o k
*/
type ScanOriginOK struct {
	Payload *models.CdnScanOriginResponse
}

func (o *ScanOriginOK) Error() string {
	return fmt.Sprintf("[POST /cdn/v1/origins/scan][%d] scanOriginOK  %+v", 200, o.Payload)
}

func (o *ScanOriginOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CdnScanOriginResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewScanOriginUnauthorized creates a ScanOriginUnauthorized with default headers values
func NewScanOriginUnauthorized() *ScanOriginUnauthorized {
	return &ScanOriginUnauthorized{}
}

/*ScanOriginUnauthorized handles this case with default header values.

Returned when an unauthorized request is attempted.
*/
type ScanOriginUnauthorized struct {
	Payload *models.APIStatus
}

func (o *ScanOriginUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cdn/v1/origins/scan][%d] scanOriginUnauthorized  %+v", 401, o.Payload)
}

func (o *ScanOriginUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewScanOriginInternalServerError creates a ScanOriginInternalServerError with default headers values
func NewScanOriginInternalServerError() *ScanOriginInternalServerError {
	return &ScanOriginInternalServerError{}
}

/*ScanOriginInternalServerError handles this case with default header values.

Internal server error.
*/
type ScanOriginInternalServerError struct {
	Payload *models.APIStatus
}

func (o *ScanOriginInternalServerError) Error() string {
	return fmt.Sprintf("[POST /cdn/v1/origins/scan][%d] scanOriginInternalServerError  %+v", 500, o.Payload)
}

func (o *ScanOriginInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewScanOriginDefault creates a ScanOriginDefault with default headers values
func NewScanOriginDefault(code int) *ScanOriginDefault {
	return &ScanOriginDefault{
		_statusCode: code,
	}
}

/*ScanOriginDefault handles this case with default header values.

Default error structure.
*/
type ScanOriginDefault struct {
	_statusCode int

	Payload *models.APIStatus
}

// Code gets the status code for the scan origin default response
func (o *ScanOriginDefault) Code() int {
	return o._statusCode
}

func (o *ScanOriginDefault) Error() string {
	return fmt.Sprintf("[POST /cdn/v1/origins/scan][%d] ScanOrigin default  %+v", o._statusCode, o.Payload)
}

func (o *ScanOriginDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
