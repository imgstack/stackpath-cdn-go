// Code generated by go-swagger; DO NOT EDIT.

package cdn

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/renderinc/stackpath-cdn-go/models"
)

// EnableSiteReader is a Reader for the EnableSite structure.
type EnableSiteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EnableSiteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewEnableSiteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewEnableSiteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEnableSiteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewEnableSiteDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewEnableSiteNoContent creates a EnableSiteNoContent with default headers values
func NewEnableSiteNoContent() *EnableSiteNoContent {
	return &EnableSiteNoContent{}
}

/* EnableSiteNoContent describes a response with status code 204, with default header values.

No content
*/
type EnableSiteNoContent struct {
}

func (o *EnableSiteNoContent) Error() string {
	return fmt.Sprintf("[POST /cdn/v1/stacks/{stack_id}/sites/{site_id}/enable][%d] enableSiteNoContent ", 204)
}

func (o *EnableSiteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEnableSiteUnauthorized creates a EnableSiteUnauthorized with default headers values
func NewEnableSiteUnauthorized() *EnableSiteUnauthorized {
	return &EnableSiteUnauthorized{}
}

/* EnableSiteUnauthorized describes a response with status code 401, with default header values.

Returned when an unauthorized request is attempted.
*/
type EnableSiteUnauthorized struct {
	Payload *models.APIStatus
}

func (o *EnableSiteUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cdn/v1/stacks/{stack_id}/sites/{site_id}/enable][%d] enableSiteUnauthorized  %+v", 401, o.Payload)
}
func (o *EnableSiteUnauthorized) GetPayload() *models.APIStatus {
	return o.Payload
}

func (o *EnableSiteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEnableSiteInternalServerError creates a EnableSiteInternalServerError with default headers values
func NewEnableSiteInternalServerError() *EnableSiteInternalServerError {
	return &EnableSiteInternalServerError{}
}

/* EnableSiteInternalServerError describes a response with status code 500, with default header values.

Internal server error.
*/
type EnableSiteInternalServerError struct {
	Payload *models.APIStatus
}

func (o *EnableSiteInternalServerError) Error() string {
	return fmt.Sprintf("[POST /cdn/v1/stacks/{stack_id}/sites/{site_id}/enable][%d] enableSiteInternalServerError  %+v", 500, o.Payload)
}
func (o *EnableSiteInternalServerError) GetPayload() *models.APIStatus {
	return o.Payload
}

func (o *EnableSiteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEnableSiteDefault creates a EnableSiteDefault with default headers values
func NewEnableSiteDefault(code int) *EnableSiteDefault {
	return &EnableSiteDefault{
		_statusCode: code,
	}
}

/* EnableSiteDefault describes a response with status code -1, with default header values.

Default error structure.
*/
type EnableSiteDefault struct {
	_statusCode int

	Payload *models.APIStatus
}

// Code gets the status code for the enable site default response
func (o *EnableSiteDefault) Code() int {
	return o._statusCode
}

func (o *EnableSiteDefault) Error() string {
	return fmt.Sprintf("[POST /cdn/v1/stacks/{stack_id}/sites/{site_id}/enable][%d] EnableSite default  %+v", o._statusCode, o.Payload)
}
func (o *EnableSiteDefault) GetPayload() *models.APIStatus {
	return o.Payload
}

func (o *EnableSiteDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
