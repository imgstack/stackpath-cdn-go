// Code generated by go-swagger; DO NOT EDIT.

package cdn

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetSiteScriptParams creates a new GetSiteScriptParams object
// with the default values initialized.
func NewGetSiteScriptParams() *GetSiteScriptParams {
	var ()
	return &GetSiteScriptParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetSiteScriptParamsWithTimeout creates a new GetSiteScriptParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetSiteScriptParamsWithTimeout(timeout time.Duration) *GetSiteScriptParams {
	var ()
	return &GetSiteScriptParams{

		timeout: timeout,
	}
}

// NewGetSiteScriptParamsWithContext creates a new GetSiteScriptParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetSiteScriptParamsWithContext(ctx context.Context) *GetSiteScriptParams {
	var ()
	return &GetSiteScriptParams{

		Context: ctx,
	}
}

// NewGetSiteScriptParamsWithHTTPClient creates a new GetSiteScriptParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetSiteScriptParamsWithHTTPClient(client *http.Client) *GetSiteScriptParams {
	var ()
	return &GetSiteScriptParams{
		HTTPClient: client,
	}
}

/*GetSiteScriptParams contains all the parameters to send to the API endpoint
for the get site script operation typically these are written to a http.Request
*/
type GetSiteScriptParams struct {

	/*ScriptID*/
	ScriptID string
	/*ScriptVersion*/
	ScriptVersion *string
	/*SiteID*/
	SiteID string
	/*StackID*/
	StackID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get site script params
func (o *GetSiteScriptParams) WithTimeout(timeout time.Duration) *GetSiteScriptParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get site script params
func (o *GetSiteScriptParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get site script params
func (o *GetSiteScriptParams) WithContext(ctx context.Context) *GetSiteScriptParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get site script params
func (o *GetSiteScriptParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get site script params
func (o *GetSiteScriptParams) WithHTTPClient(client *http.Client) *GetSiteScriptParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get site script params
func (o *GetSiteScriptParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithScriptID adds the scriptID to the get site script params
func (o *GetSiteScriptParams) WithScriptID(scriptID string) *GetSiteScriptParams {
	o.SetScriptID(scriptID)
	return o
}

// SetScriptID adds the scriptId to the get site script params
func (o *GetSiteScriptParams) SetScriptID(scriptID string) {
	o.ScriptID = scriptID
}

// WithScriptVersion adds the scriptVersion to the get site script params
func (o *GetSiteScriptParams) WithScriptVersion(scriptVersion *string) *GetSiteScriptParams {
	o.SetScriptVersion(scriptVersion)
	return o
}

// SetScriptVersion adds the scriptVersion to the get site script params
func (o *GetSiteScriptParams) SetScriptVersion(scriptVersion *string) {
	o.ScriptVersion = scriptVersion
}

// WithSiteID adds the siteID to the get site script params
func (o *GetSiteScriptParams) WithSiteID(siteID string) *GetSiteScriptParams {
	o.SetSiteID(siteID)
	return o
}

// SetSiteID adds the siteId to the get site script params
func (o *GetSiteScriptParams) SetSiteID(siteID string) {
	o.SiteID = siteID
}

// WithStackID adds the stackID to the get site script params
func (o *GetSiteScriptParams) WithStackID(stackID string) *GetSiteScriptParams {
	o.SetStackID(stackID)
	return o
}

// SetStackID adds the stackId to the get site script params
func (o *GetSiteScriptParams) SetStackID(stackID string) {
	o.StackID = stackID
}

// WriteToRequest writes these params to a swagger request
func (o *GetSiteScriptParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param script_id
	if err := r.SetPathParam("script_id", o.ScriptID); err != nil {
		return err
	}

	if o.ScriptVersion != nil {

		// query param script_version
		var qrScriptVersion string
		if o.ScriptVersion != nil {
			qrScriptVersion = *o.ScriptVersion
		}
		qScriptVersion := qrScriptVersion
		if qScriptVersion != "" {
			if err := r.SetQueryParam("script_version", qScriptVersion); err != nil {
				return err
			}
		}

	}

	// path param site_id
	if err := r.SetPathParam("site_id", o.SiteID); err != nil {
		return err
	}

	// path param stack_id
	if err := r.SetPathParam("stack_id", o.StackID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
