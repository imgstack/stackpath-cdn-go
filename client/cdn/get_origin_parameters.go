// Code generated by go-swagger; DO NOT EDIT.

package cdn

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetOriginParams creates a new GetOriginParams object
// with the default values initialized.
func NewGetOriginParams() *GetOriginParams {
	var ()
	return &GetOriginParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetOriginParamsWithTimeout creates a new GetOriginParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetOriginParamsWithTimeout(timeout time.Duration) *GetOriginParams {
	var ()
	return &GetOriginParams{

		timeout: timeout,
	}
}

// NewGetOriginParamsWithContext creates a new GetOriginParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetOriginParamsWithContext(ctx context.Context) *GetOriginParams {
	var ()
	return &GetOriginParams{

		Context: ctx,
	}
}

// NewGetOriginParamsWithHTTPClient creates a new GetOriginParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetOriginParamsWithHTTPClient(client *http.Client) *GetOriginParams {
	var ()
	return &GetOriginParams{
		HTTPClient: client,
	}
}

/*GetOriginParams contains all the parameters to send to the API endpoint
for the get origin operation typically these are written to a http.Request
*/
type GetOriginParams struct {

	/*OriginID
	  The ID of the origin to retrieve

	*/
	OriginID string
	/*StackID
	  The ID of the stack to retrieve an origin from

	*/
	StackID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get origin params
func (o *GetOriginParams) WithTimeout(timeout time.Duration) *GetOriginParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get origin params
func (o *GetOriginParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get origin params
func (o *GetOriginParams) WithContext(ctx context.Context) *GetOriginParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get origin params
func (o *GetOriginParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get origin params
func (o *GetOriginParams) WithHTTPClient(client *http.Client) *GetOriginParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get origin params
func (o *GetOriginParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithOriginID adds the originID to the get origin params
func (o *GetOriginParams) WithOriginID(originID string) *GetOriginParams {
	o.SetOriginID(originID)
	return o
}

// SetOriginID adds the originId to the get origin params
func (o *GetOriginParams) SetOriginID(originID string) {
	o.OriginID = originID
}

// WithStackID adds the stackID to the get origin params
func (o *GetOriginParams) WithStackID(stackID string) *GetOriginParams {
	o.SetStackID(stackID)
	return o
}

// SetStackID adds the stackId to the get origin params
func (o *GetOriginParams) SetStackID(stackID string) {
	o.StackID = stackID
}

// WriteToRequest writes these params to a swagger request
func (o *GetOriginParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param origin_id
	if err := r.SetPathParam("origin_id", o.OriginID); err != nil {
		return err
	}

	// path param stack_id
	if err := r.SetPathParam("stack_id", o.StackID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
