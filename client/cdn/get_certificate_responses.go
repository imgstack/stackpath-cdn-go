// Code generated by go-swagger; DO NOT EDIT.

package cdn

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/renderinc/stackpath-cdn-go/models"
)

// GetCertificateReader is a Reader for the GetCertificate structure.
type GetCertificateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCertificateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCertificateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetCertificateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCertificateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetCertificateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetCertificateOK creates a GetCertificateOK with default headers values
func NewGetCertificateOK() *GetCertificateOK {
	return &GetCertificateOK{}
}

/*GetCertificateOK handles this case with default header values.

GetCertificateOK get certificate o k
*/
type GetCertificateOK struct {
	Payload *models.CdnGetCertificateResponse
}

func (o *GetCertificateOK) Error() string {
	return fmt.Sprintf("[GET /cdn/v1/stacks/{stack_id}/certificates/{certificate_id}][%d] getCertificateOK  %+v", 200, o.Payload)
}

func (o *GetCertificateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CdnGetCertificateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCertificateUnauthorized creates a GetCertificateUnauthorized with default headers values
func NewGetCertificateUnauthorized() *GetCertificateUnauthorized {
	return &GetCertificateUnauthorized{}
}

/*GetCertificateUnauthorized handles this case with default header values.

Returned when an unauthorized request is attempted.
*/
type GetCertificateUnauthorized struct {
	Payload *models.APIStatus
}

func (o *GetCertificateUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cdn/v1/stacks/{stack_id}/certificates/{certificate_id}][%d] getCertificateUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCertificateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCertificateInternalServerError creates a GetCertificateInternalServerError with default headers values
func NewGetCertificateInternalServerError() *GetCertificateInternalServerError {
	return &GetCertificateInternalServerError{}
}

/*GetCertificateInternalServerError handles this case with default header values.

Internal server error.
*/
type GetCertificateInternalServerError struct {
	Payload *models.APIStatus
}

func (o *GetCertificateInternalServerError) Error() string {
	return fmt.Sprintf("[GET /cdn/v1/stacks/{stack_id}/certificates/{certificate_id}][%d] getCertificateInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCertificateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCertificateDefault creates a GetCertificateDefault with default headers values
func NewGetCertificateDefault(code int) *GetCertificateDefault {
	return &GetCertificateDefault{
		_statusCode: code,
	}
}

/*GetCertificateDefault handles this case with default header values.

Default error structure.
*/
type GetCertificateDefault struct {
	_statusCode int

	Payload *models.APIStatus
}

// Code gets the status code for the get certificate default response
func (o *GetCertificateDefault) Code() int {
	return o._statusCode
}

func (o *GetCertificateDefault) Error() string {
	return fmt.Sprintf("[GET /cdn/v1/stacks/{stack_id}/certificates/{certificate_id}][%d] GetCertificate default  %+v", o._statusCode, o.Payload)
}

func (o *GetCertificateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
