// Code generated by go-swagger; DO NOT EDIT.

package cdn

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/renderinc/stackpath-cdn-go/models"
)

// DeleteScopeRuleReader is a Reader for the DeleteScopeRule structure.
type DeleteScopeRuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteScopeRuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteScopeRuleNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeleteScopeRuleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteScopeRuleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDeleteScopeRuleDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteScopeRuleNoContent creates a DeleteScopeRuleNoContent with default headers values
func NewDeleteScopeRuleNoContent() *DeleteScopeRuleNoContent {
	return &DeleteScopeRuleNoContent{}
}

/*DeleteScopeRuleNoContent handles this case with default header values.

No content
*/
type DeleteScopeRuleNoContent struct {
}

func (o *DeleteScopeRuleNoContent) Error() string {
	return fmt.Sprintf("[DELETE /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/rules/{rule_id}][%d] deleteScopeRuleNoContent ", 204)
}

func (o *DeleteScopeRuleNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteScopeRuleUnauthorized creates a DeleteScopeRuleUnauthorized with default headers values
func NewDeleteScopeRuleUnauthorized() *DeleteScopeRuleUnauthorized {
	return &DeleteScopeRuleUnauthorized{}
}

/*DeleteScopeRuleUnauthorized handles this case with default header values.

Returned when an unauthorized request is attempted.
*/
type DeleteScopeRuleUnauthorized struct {
	Payload *models.APIStatus
}

func (o *DeleteScopeRuleUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/rules/{rule_id}][%d] deleteScopeRuleUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteScopeRuleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteScopeRuleInternalServerError creates a DeleteScopeRuleInternalServerError with default headers values
func NewDeleteScopeRuleInternalServerError() *DeleteScopeRuleInternalServerError {
	return &DeleteScopeRuleInternalServerError{}
}

/*DeleteScopeRuleInternalServerError handles this case with default header values.

Internal server error.
*/
type DeleteScopeRuleInternalServerError struct {
	Payload *models.APIStatus
}

func (o *DeleteScopeRuleInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/rules/{rule_id}][%d] deleteScopeRuleInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteScopeRuleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteScopeRuleDefault creates a DeleteScopeRuleDefault with default headers values
func NewDeleteScopeRuleDefault(code int) *DeleteScopeRuleDefault {
	return &DeleteScopeRuleDefault{
		_statusCode: code,
	}
}

/*DeleteScopeRuleDefault handles this case with default header values.

Default error structure.
*/
type DeleteScopeRuleDefault struct {
	_statusCode int

	Payload *models.APIStatus
}

// Code gets the status code for the delete scope rule default response
func (o *DeleteScopeRuleDefault) Code() int {
	return o._statusCode
}

func (o *DeleteScopeRuleDefault) Error() string {
	return fmt.Sprintf("[DELETE /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/rules/{rule_id}][%d] DeleteScopeRule default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteScopeRuleDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
